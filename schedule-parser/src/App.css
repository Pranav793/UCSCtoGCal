/* .App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
} */
/* Use a more modern, nice-looking font stack, if desired */


.App {
  text-align: center;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
  background-color: #f0f2f5; /* Lighter background for the whole page */
  margin: 0;
  padding: 0;
}

/* The spinning React logo can stay as is if you like it, or remove it. */
.App-logo {
  height: 40vmin;
  pointer-events: none;
  margin-bottom: 2rem; /* Some spacing below the logo */
}

/* Keeps the logo spinning if user has not requested reduced motion */
@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

/* A simple keyframes spin animation */
@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* 
   The main header area.
   We give it a nice dark background with a slight gradient, 
   some padding, and white text for contrast.
*/
.App-header {
  background: linear-gradient(135deg, #1f2430 0%, #282c34 100%);
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  color: #ffffff;
  padding: 2rem;
  box-sizing: border-box;
}

/* The link color can remain React-blue or be customized */
.App-link {
  color: #61dafb;
  text-decoration: none;
  font-weight: 600;
}

/* Optional: add a hover effect for .App-link */
.App-link:hover {
  text-decoration: underline;
}

/* 
   Example for some button styling. 
   If you have <button> elements, you can style them nicely like this:
*/
button {
  /* background-color: #61dafb; */
  background-color: #61dafb;
  color: #282c34;
  border: none;
  border-radius: 4px;
  padding: 0.6rem 1rem;
  cursor: pointer;
  font-size: 1rem;
  font-weight: 600;
  transition: background-color 0.2s ease;
  margin: 0.5rem;
}

button:hover {
  background-color: #4faad1;
}

/* 
   Example styling for a textarea or input 
   if used within your app 
*/
textarea {
  border: 1px solid #ccc;
  border-radius: 4px;
  padding: 0.6rem;
  font-size: 1rem;
  width: 90%;
  max-width: 600px;
  margin-top: 1rem;
}

/* 
   Extra: If you have a container or card, 
   you can create a 'card' style
*/
.card {
  background: #ffffff;
  border-radius: 8px;
  padding: 2rem;
  margin: 1rem auto;
  max-width: 600px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
}

label {
  display: flex;
  align-items: center;
  font-size: 1rem;
  margin-top: 1rem;
  color: #fff;
}

label input[type="checkbox"] {
  margin-right: 0.5rem;
}
